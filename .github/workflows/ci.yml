name: CI PHP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Services nécessaires (base de données PostgreSQL)
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: "!ChangeMe!"
          POSTGRES_USER: app
          POSTGRES_DB: app_test
        options: >-
          --health-cmd "pg_isready -U app"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Installer PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, dom, filter, gd, json, pgsql

    - name: Installer les dépendances
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Attendre que la base de données soit prête
      run: |
        for i in {1..30}; do
          if pg_isready -h 127.0.0.1 -p 5432 -U app; then
            echo "✅ Base de données prête"
            break
          fi
          echo "⏳ Attente de la base de données... ($i/30)"
          sleep 2
        done

    - name: Configurer l'environnement de test
      run: |
        cp .env.test .env.test.local
        echo "DATABASE_URL=postgresql://app:!ChangeMe!@127.0.0.1:5432/app_test?serverVersion=16&charset=utf8" >> .env.test.local

    - name: Créer la base de données et migrer
      run: |
        # Vérifier la connexion PostgreSQL
        PGPASSWORD="!ChangeMe!" psql -h 127.0.0.1 -U app -d app_test -c "SELECT version();"
        
        # Créer la base de données via Symfony
        php bin/console doctrine:database:create --env=test --no-interaction
        php bin/console doctrine:migrations:migrate --env=test --no-interaction --quiet

    - name: Charger les fixtures
      run: php bin/console doctrine:fixtures:load --env=test --no-interaction

    - name: Lancer les tests
      run: vendor/bin/phpunit --testdox