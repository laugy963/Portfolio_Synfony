{% extends 'base.html.twig' %}

{% block title %}Changer mon mot de passe{% endblock %}

{% block body %}
<div class="container py-5 page-container content-fade-in">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-warning text-dark">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-lock me-2"></i>
                        Changer mon mot de passe
                    </h3>
                </div>
                <div class="card-body">
                    {% for message in app.flashes('success') %}
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            {{ message }}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    {% endfor %}

                    {% for message in app.flashes('error') %}
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-times-circle me-2"></i>
                            {{ message }}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    {% endfor %}

                    <div class="alert alert-info" role="alert">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Sécurité :</strong> Pour votre sécurité, veuillez d'abord entrer votre mot de passe actuel.
                    </div>

                    {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': true}}) }}
                    
                    <div class="mb-4">
                        {{ form_label(form.currentPassword, null, {'label_attr': {'class': 'form-label'}}) }}
                        <div class="input-group">
                            {{ form_widget(form.currentPassword, {'attr': {'id': 'currentPassword'}}) }}
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('currentPassword', 'currentPasswordIcon')">
                                <i class="fas fa-eye-slash" id="currentPasswordIcon"></i>
                            </button>
                        </div>
                        {{ form_errors(form.currentPassword) }}
                    </div>

                    <div class="mb-3">
                        {{ form_label(form.plainPassword.first, null, {'label_attr': {'class': 'form-label'}}) }}
                        <div class="input-group">
                            {{ form_widget(form.plainPassword.first, {'attr': {'id': 'newPassword'}}) }}
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('newPassword', 'newPasswordIcon')">
                                <i class="fas fa-eye-slash" id="newPasswordIcon"></i>
                            </button>
                        </div>
                        {{ form_errors(form.plainPassword.first) }}
                    </div>

                    <div class="mb-4">
                        {{ form_label(form.plainPassword.second, null, {'label_attr': {'class': 'form-label'}}) }}
                        <div class="input-group">
                            {{ form_widget(form.plainPassword.second, {'attr': {'id': 'confirmPassword'}}) }}
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('confirmPassword', 'confirmPasswordIcon')">
                                <i class="fas fa-eye-slash" id="confirmPasswordIcon"></i>
                            </button>
                        </div>
                        {{ form_errors(form.plainPassword.second) }}
                    </div>

                    <div class="password-requirements mb-4">
                        <h6 class="text-muted mb-2">Exigences du mot de passe :</h6>
                        <ul class="list-unstyled">
                            <li class="requirement" id="length"><i class="fas fa-times text-danger me-2"></i>Au moins 6 caractères</li>
                            <li class="requirement" id="lowercase"><i class="fas fa-times text-danger me-2"></i>Une lettre minuscule</li>
                            <li class="requirement" id="uppercase"><i class="fas fa-times text-danger me-2"></i>Une lettre majuscule</li>
                            <li class="requirement" id="number"><i class="fas fa-times text-danger me-2"></i>Un chiffre</li>
                        </ul>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="{{ path('app_profil_index') }}" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>
                            Annuler
                        </a>
                        
                        <button type="submit" class="btn btn-warning text-dark">
                            <i class="fas fa-save me-2"></i>
                            Changer le mot de passe
                        </button>
                    </div>

                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.form-control:focus {
    border-color: #ffc107;
    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25);
}

.card {
    border: none;
    border-radius: 12px;
}

.card-header {
    border-radius: 12px 12px 0 0 !important;
    background: linear-gradient(135deg, #ffc107, #e0a800);
}

.btn {
    border-radius: 8px;
    font-weight: 500;
    padding: 0.625rem 1.25rem;
}

.form-label {
    font-weight: 600;
    color: #495057;
}

.input-group .btn {
    border-color: #ced4da;
}

.requirement.valid i {
    color: #28a745 !important;
}

.requirement.valid i:before {
    content: "\f00c";
}

.password-requirements {
    font-size: 0.875rem;
}
</style>

<script>
function togglePassword(inputId, iconId) {
    const passwordInput = document.getElementById(inputId);
    const icon = document.getElementById(iconId);
    
    if (passwordInput.type === 'password') {
        passwordInput.type = 'text';
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
    } else {
        passwordInput.type = 'password';
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
    }
}

document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('.needs-validation');
    const newPasswordInput = document.getElementById('newPassword');
    
    // Validation en temps réel
    newPasswordInput.addEventListener('input', function() {
        const password = this.value;
        
        // Vérifier la longueur
        const lengthReq = document.getElementById('length');
        if (password.length >= 6) {
            lengthReq.classList.add('valid');
        } else {
            lengthReq.classList.remove('valid');
        }
        
        // Vérifier les minuscules
        const lowercaseReq = document.getElementById('lowercase');
        if (/[a-z]/.test(password)) {
            lowercaseReq.classList.add('valid');
        } else {
            lowercaseReq.classList.remove('valid');
        }
        
        // Vérifier les majuscules
        const uppercaseReq = document.getElementById('uppercase');
        if (/[A-Z]/.test(password)) {
            uppercaseReq.classList.add('valid');
        } else {
            uppercaseReq.classList.remove('valid');
        }
        
        // Vérifier les chiffres
        const numberReq = document.getElementById('number');
        if (/\d/.test(password)) {
            numberReq.classList.add('valid');
        } else {
            numberReq.classList.remove('valid');
        }
    });
    
    // Validation du formulaire
    form.addEventListener('submit', function(event) {
        if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
        }
        
        form.classList.add('was-validated');
    });
    
    // Focus automatique sur le premier champ
    const firstInput = form.querySelector('input');
    if (firstInput) {
        firstInput.focus();
    }
});
</script>
{% endblock %}
